
Allocating common symbols
Common symbol       size              file

idt_ptr             0x6               kernel/global.o
task_stack          0x8000            kernel/global.o
gdt                 0x400             kernel/global.o
tss                 0x68              kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x70              kernel/global.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x30400
LOAD kernel/kernel.o
LOAD kernel/start.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/main.o
LOAD lib/string.o
LOAD lib/kliba.o
LOAD lib/klib.o
                0x0000000008048000                PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.sharable_data .rel.sharable_data.* .rel.gnu.linkonce.shrd.*)
 *(.rel.sharable_bss .rel.sharable_bss.* .rel.gnu.linkonce.shrb.*)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                0x0000000008048094                PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000000000        0x0 kernel/kernel.o
                0x0000000008048094                PROVIDE (__rel_iplt_end, .)

.init
 *(.init)

.plt            0x0000000008048094        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000000000        0x0 kernel/kernel.o

.text           0x0000000000030400      0xf9d
 *(.text.unlikely .text.*_unlikely)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x391 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x00000000000304c0                hwint01
                0x00000000000304e0                hwint02
                0x0000000000030500                hwint03
                0x0000000000030520                hwint04
                0x0000000000030540                hwint05
                0x0000000000030560                hwint06
                0x0000000000030580                hwint07
                0x00000000000305a0                hwint08
                0x00000000000305c0                hwint09
                0x00000000000305e0                hwint10
                0x0000000000030600                hwint11
                0x0000000000030620                hwint12
                0x0000000000030640                hwint13
                0x0000000000030660                hwint14
                0x0000000000030680                hwint15
                0x0000000000030691                divide_error
                0x00000000000306a0                single_step_exception
                0x00000000000306af                nmi
                0x00000000000306be                breakpoint_exception
                0x00000000000306cd                overflow
                0x00000000000306dc                bounds_check
                0x00000000000306eb                inval_opcode
                0x00000000000306fa                copr_not_available
                0x0000000000030709                double_fault
                0x0000000000030713                copr_seg_overrun
                0x0000000000030722                inval_tss
                0x000000000003072c                segment_not_present
                0x0000000000030736                stack_exception
                0x0000000000030740                general_protection
                0x000000000003074a                page_fault
                0x0000000000030754                copr_error
                0x000000000003076f                restart
 *fill*         0x0000000000030791        0x3 90909090
 .text          0x0000000000030794       0x82 kernel/start.o
                0x0000000000030794                cstart
 *fill*         0x0000000000030816        0x2 90909090
 .text          0x0000000000030818       0xfb kernel/i8259.o
                0x0000000000030818                init_8259A
                0x00000000000308e8                spurious_irq
 *fill*         0x0000000000030913        0x1 90909090
 .text          0x0000000000030914        0x0 kernel/global.o
 .text          0x0000000000030914      0x76a kernel/protect.o
                0x0000000000030914                init_prot
                0x0000000000030ea6                seg2phys
                0x0000000000030f61                exception_handler
 *fill*         0x000000000003107e        0x2 90909090
 .text          0x0000000000031080      0x123 kernel/main.o
                0x0000000000031080                kernel_main
                0x0000000000031161                TestA
 *fill*         0x00000000000311a3        0xd 90909090
 .text          0x00000000000311b0       0x2f lib/string.o
                0x00000000000311b0                memcpy
                0x00000000000311ca                memset
 *fill*         0x00000000000311df        0x1 90909090
 .text          0x00000000000311e0       0xa8 lib/kliba.o
                0x00000000000311e0                disp_str
                0x0000000000031227                disp_color_str
                0x000000000003126f                out_byte
                0x000000000003127c                in_byte
 .text          0x0000000000031288      0x115 lib/klib.o
                0x0000000000031288                itoa
                0x0000000000031332                disp_int
                0x0000000000031357                delay
 *(.gnu.warning)

.fini
 *(.fini)
                0x000000000003139d                PROVIDE (__etext, .)
                0x000000000003139d                PROVIDE (_etext, .)
                0x000000000003139d                PROVIDE (etext, .)

.rodata         0x00000000000313a0      0x2f6
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000000313a0       0x2d kernel/start.o
 .rodata        0x00000000000313cd       0x11 kernel/i8259.o
 *fill*         0x00000000000313de        0x2 00
 .rodata        0x00000000000313e0      0x290 kernel/protect.o
 .rodata        0x0000000000031670       0x26 kernel/main.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)
                0x0000000000031696                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x0000000000032696                . = (0x1000 DATA_SEGMENT_ALIGN 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000032696        0x0
                0x0000000000032696                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x0000000000032696                PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000032696        0x0
                0x0000000000032696                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*))
 *(.init_array)
                0x0000000000032696                PROVIDE (__init_array_end, .)

.fini_array     0x0000000000032696        0x0
                0x0000000000032696                PROVIDE (__fini_array_start, .)
 *(.fini_array)
 *(SORT(.fini_array.*))
                0x0000000000032696                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000032696                . = (. DATA_SEGMENT_RELRO_END 0xc)

.got.plt        0x0000000000032698        0x0 load address 0x0000000000032696
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000000000        0x0 kernel/kernel.o

.data           0x0000000000032698        0x4
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000032698        0x2 kernel/kernel.o
 *fill*         0x000000000003269a        0x2 00
 .data          0x000000000003269c        0x0 kernel/start.o
 .data          0x000000000003269c        0x0 kernel/i8259.o
 .data          0x000000000003269c        0x0 kernel/global.o
 .data          0x000000000003269c        0x0 kernel/protect.o
 .data          0x000000000003269c        0x0 kernel/main.o
 .data          0x000000000003269c        0x0 lib/klib.o

.data1
 *(.data1)

.sharable_data  0x0000000000033000        0x0
                0x0000000000033000                PROVIDE (__sharable_data_start, .)
 *(.sharable_data .sharable_data.* .gnu.linkonce.shrd.*)
                0x0000000000033000                . = ALIGN ((. != 0x0)?0x1000:0x1)
                0x0000000000033000                PROVIDE (__sharable_data_end, .)
                0x0000000000033000                _edata = .
                0x0000000000033000                PROVIDE (edata, .)
                0x0000000000033000                __bss_start = .

.bss            0x00000000000326a0     0x9530
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000326a0      0x800 kernel/kernel.o
 .bss           0x0000000000032ea0        0x0 kernel/start.o
 .bss           0x0000000000032ea0        0x0 kernel/i8259.o
 .bss           0x0000000000032ea0        0x0 kernel/global.o
 .bss           0x0000000000032ea0        0x0 kernel/protect.o
 .bss           0x0000000000032ea0        0x0 kernel/main.o
 .bss           0x0000000000032ea0        0x0 lib/klib.o
 *(COMMON)
 COMMON         0x0000000000032ea0     0x8d30 kernel/global.o
                0x0000000000032ea0                idt_ptr
                0x0000000000032ec0                task_stack
                0x000000000003aec0                gdt
                0x000000000003b2c0                tss
                0x000000000003b328                disp_pos
                0x000000000003b32c                gdt_ptr
                0x000000000003b340                idt
                0x000000000003bb40                p_proc_ready
                0x000000000003bb60                proc_table
                0x000000000003bbd0                . = ALIGN ((. != 0x0)?0x4:0x1)

.sharable_bss   0x000000000003c000        0x0
                0x000000000003c000                PROVIDE (__sharable_bss_start, .)
 *(.dynsharablebss)
 *(.sharable_bss .sharable_bss.* .gnu.linkonce.shrb.*)
 *(SHARABLE_COMMON)
                0x000000000003c000                . = ALIGN ((. != 0x0)?0x1000:0x1)
                0x000000000003c000                PROVIDE (__sharable_bss_end, .)
                0x000000000003c000                . = ALIGN (0x4)
                0x000000000003c000                . = ALIGN (0x4)
                0x000000000003c000                _end = .
                0x000000000003c000                PROVIDE (end, .)
                0x000000000003c000                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2c
 *(.comment)
 .comment       0x0000000000000000       0x2c kernel/start.o
                                         0x2d (size before relaxing)
 .comment       0x0000000000000000       0x2d kernel/i8259.o
 .comment       0x0000000000000000       0x2d kernel/global.o
 .comment       0x0000000000000000       0x2d kernel/protect.o
 .comment       0x0000000000000000       0x2d kernel/main.o
 .comment       0x0000000000000000       0x2d lib/klib.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel/kernel.elf elf32-i386)
